[project]
name = "GLIH"
environment = "dev"
client = "Lineage Logistics"
use_case = "Cold Chain Intelligence & Automation"

[storage]
mode = "local"
raw_data_dir = "data/raw"
processed_data_dir = "data/processed"
s3_bucket = ""
s3_prefix = "glih/"
azure_container = ""
gcs_bucket = ""

[vector_store]
provider = "chromadb"
collection = "glih-default"

[vector_store.chromadb]
persist_directory = "data/chromadb"
distance_metric = "cosine"

[vector_store.faiss]
index_type = "IndexFlatL2"
persist_directory = "data/faiss"
nlist = 100
m = 16

[vector_store.pinecone]
api_key_env = "PINECONE_API_KEY"
environment = "us-east-1-aws"
index_name = "glih-index"
dimension = 1024
metric = "cosine"
pod_type = "p1.x1"

[vector_store.weaviate]
url = "http://localhost:8080"
api_key_env = "WEAVIATE_API_KEY"
class_name = "GlihDocument"
distance_metric = "cosine"

[vector_store.qdrant]
url = "http://localhost:6333"
api_key_env = "QDRANT_API_KEY"
collection_name = "glih_collection"
distance_metric = "Cosine"

[vector_store.milvus]
host = "localhost"
port = 19530
collection_name = "glih_collection"
index_type = "IVF_FLAT"
metric_type = "L2"

[embeddings]
provider = "mistral"
openai_model = "text-embedding-3-small"
hf_model = "sentence-transformers/all-MiniLM-L6-v2"
mistral_model = "mistral-embed"

[llm]
provider = "mistral"
model = "mistral-medium-latest"
api_key_env = "MISTRAL_API_KEY"

[agents]
enabled = [
    "AnomalyResponder",
    "RouteAdvisor",
    "CustomerNotifier",
    "OpsSummarizer",
]
anomaly_temperature_threshold_c = 2.0
anomaly_temperature_critical_c = 5.0
anomaly_response_time_target_minutes = 5
anomaly_notification_channels = [
    "email",
    "sms",
    "webhook",
]
route_max_delay_minutes = 30
route_spoilage_risk_threshold = 0.7
route_optimization_enabled = true
route_weather_integration = true
customer_notification_channel = "email"
customer_notification_tone = "professional"
customer_proactive_updates = true
ops_summary_window_hours = 24
ops_summary_schedule = "shift_end"
ops_export_format = "pdf"

[backend]
host = "0.0.0.0"
port = 8000
log_level = "INFO"
max_workers = 4

[integrations]
weather_api_enabled = false
traffic_api_enabled = false
wms_integration_enabled = false
tms_integration_enabled = false
iot_sensor_integration_enabled = false

[frontend]
backend_url = "http://localhost:8000"

[lineage]
facilities = [
    "Chicago",
    "Dallas",
    "Atlanta",
    "Los Angeles",
    "Seattle",
]
product_types = [
    "Seafood",
    "Dairy",
    "Frozen Foods",
    "Produce",
    "Meat",
]
compliance_standards = [
    "HACCP",
    "FDA",
    "FSMA",
    "GMP",
]
sop_collection = "lineage-sops"
route_history_collection = "lineage-routes"

[lineage.temperature_ranges]
Seafood = [
    -2,
    2,
]
Dairy = [
    0,
    4,
]
FrozenFoods = [
    -25,
    -18,
]
Produce = [
    0,
    10,
]
Meat = [
    -2,
    4,
]
